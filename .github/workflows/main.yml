name: Build OpenWrt

on: 
  push:
    branches: 
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi `docker images -q`
        echo "Deleting files, please wait ..."
        sudo rm -rf \
          /usr/share/dotnet \
          /etc/mysql \
          /etc/php
        sudo -E apt-get update
        sudo -E apt-get -y purge --ignore-missing \
          azure-cli \
          ghc* \
          zulu* \
          hhvm \
          llvm* \
          firefox \
          google* \
          dotnet* \
          powershell \
          openjdk* \
          mysql* \
          php*
        sudo -E apt-get -y autoremove --purge --ignore-missing
        sudo -E apt-get clean

    - name: Clone source code
      env: 
        REPO_URL: https://github.com/coolsnowwolf/lede 
        REPO_BRANCH: master
      run: git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt

    - name: Clone extra luci source code
      run: |
        git clone https://github.com/honwen/luci-app-aliddns  openwrt/package/luci-app-aliddns
        git clone https://github.com/zxlhhyccc/luci-app-serverchan  openwrt/package/luci-app-serverchan
        git clone https://github.com/jerrykuku/luci-theme-argon  openwrt/package/luci-theme-argon
        git clone https://github.com/Lienol/openwrt-package  openwrt/package/openwrt-package

    - name: Download and apply fullconenat patch
      run: |
        mkdir -p openwrt/package/network/config/firewall/patches
        wget -P openwrt/package/network/config/firewall/patches/ https://github.com/LGA1150/fullconenat-fw3-patch/raw/master/fullconenat.patch
        pushd openwrt
        wget -O- https://github.com/LGA1150/fullconenat-fw3-patch/raw/master/luci.patch | git apply
        popd

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        [ -e files ] && mv files openwrt/files
        cd openwrt
        rm -f ./.config*
        touch ./.config

        # 编译phicomm k2固件:
        cat >> .config <<EOF
        CONFIG_TARGET_ramips=y
        CONFIG_TARGET_ramips_mt7620=y
        CONFIG_TARGET_ramips_mt7620_DEVICE_phicomm_psg1218a=y
        EOF
        # IPv6支持:
        cat >> .config <<EOF
        CONFIG_PACKAGE_dnsmasq_full_dhcpv6=y
        CONFIG_PACKAGE_ipv6helper=y
        EOF
  
        # 常用LuCI插件选择:
        cat >> .config <<EOF
        CONFIG_PACKAGE_luci-app-arpbind=y
        CONFIG_PACKAGE_luci-app-autoreboot=y
        CONFIG_PACKAGE_luci-app-firewall=y
        CONFIG_PACKAGE_luci-app-flowoffload=y

        # Configuration
        #
        CONFIG_PACKAGE_luci-app-smartdns=y
        CONFIG_PACKAGE_luci-app-syncdial=y
        CONFIG_PACKAGE_luci-app-upnp=y
        # VPN
        CONFIG_PACKAGE_luci-app-zerotier=y
        CONFIG_PACKAGE_luci-app-tailscale=y
        CONFIG_PACKAGE_luci-app-mwan3=y

        EOF
      
        # ========================固件定制部分结束========================
        # 
        sed -i 's/^[ \t]*//g' ./.config
        make defconfig

    - name: Download package
      run: |
        cd openwrt && make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Build
      run: |
        cd openwrt
        echo -e "$(nproc) thread build."
        make -j$(nproc) V=s
        if [ $? -ne 0 ]; then
          echo "Build failed, see the error log above."
          exit 1
        fi

    - name: Assemble artifact
      run: |
        cd openwrt
        rm -rf ./artifact/
        mkdir -p ./artifact/
        find ./bin/targets/ -name "*combined*img*" | xargs -i mv -f {} ./artifact/
        find ./bin/targets/ -name "*sysupgrade*bin*" | xargs -i mv -f {} ./artifact/
        
    - name: Upload artifact
      uses: actions/upload-artifact@master
      with:
        name: OpenWrt phicomm k2
        path: ./openwrt/artifact/
